State 113 conflicts: 5 shift/reduce
State 114 conflicts: 5 shift/reduce
State 115 conflicts: 5 shift/reduce
State 116 conflicts: 5 shift/reduce
State 118 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function_s
    3              | function_list function_s

    4 function_s: function_definition
    5           | ENDLINE

    6 statement_list: statement
    7               | statement_list statement

    8 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
    9                    | TASK VARIABLE VARIABLE ENDLINE statement_list RESULT VARIABLE
   10                    | TASK FINDEXIT ENDLINE statement_list RESULT
   11                    | TASK VARIABLE VARIABLE error '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
   12                    | TASK VARIABLE error
   13                    | TASK error

   14 call_definition: DO VARIABLE VARIABLE ',' '[' declaration_list ']'
   15                | DO VARIABLE VARIABLE
   16                | DO error

   17 declaration_list: VARIABLE
   18                 | declaration_list ',' VARIABLE

   19 expression_list: expression
   20                | expression_list ',' expression

   21 expression: BOOL
   22           | INTEGER
   23           | VARIABLE
   24           | binary_operation
   25           | robot_operation
   26           | unary_operation
   27           | VARIABLE '[' expression_list ']'
   28           | VARIABLE '[' expression_list error
   29           | VARIABLE '[' error
   30           | '(' expression ')'
   31           | '(' error ')'

   32 binary_operation: expression '+' expression
   33                 | expression '*' expression
   34                 | expression '-' expression
   35                 | expression '/' expression
   36                 | expression AND expression

   37 robot_operation: MOVE
   38                | R_LEFT
   39                | R_RIGHT
   40                | GET_E

   41 unary_operation: compare_operation
   42                | '-' expression
   43                | NOT expression
   44                | NOT error
   45                | SIZE '(' VARIABLE ')'
   46                | SIZE '(' VARIABLE error
   47                | SIZE '(' ')'
   48                | SIZE error
   49                | GET VARIABLE

   50 compare_operation: MXCOMP expression
   51                  | ELCOMP expression
   52                  | MXTRUE expression
   53                  | MXFALSE expression

   54 statement: statement_s ENDLINE
   55          | PLEASE statement_s ENDLINE
   56          | PLEASE statement_s THANKS ENDLINE
   57          | statement_s THANKS ENDLINE
   58          | ENDLINE

   59 statement_s: compound_statement
   60            | definition
   61            | unary_statement
   62            | function_definition
   63            | call_definition
   64            | robot_operation
   65            | for_loop
   66            | switch_state
   67            | PRINT VARIABLE
   68            | PRINT error
   69            | VARIABLE '=' expression
   70            | VARIABLE error expression
   71            | appeal_state '=' expression
   72            | appeal_state error expression

   73 switch_state: SWITCH expression BOOL statement_list '[' BOOL statement_list ']'
   74             | SWITCH expression BOOL statement_list '[' BOOL statement_list error
   75             | SWITCH expression BOOL statement_list '[' error
   76             | SWITCH expression BOOL statement_list error BOOL
   77             | SWITCH expression error

   78 appeal_state: VARIABLE '[' expression_list ']'
   79             | VARIABLE '[' expression_list error
   80             | VARIABLE '[' error
   81             | VARIABLE error

   82 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')'
   83         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list error

   84 compound_statement: '(' ')'
   85                   | '(' block_item ')'

   86 block_item: statement
   87           | block_item statement

   88 definition: VAR VARIABLE '[' expression_list ']' '=' INTEGER
   89           | VAR VARIABLE '[' expression_list ']' '=' BOOL
   90           | VAR VARIABLE '=' INTEGER
   91           | VAR VARIABLE '=' BOOL
   92           | VAR VARIABLE '[' expression_list ']' '=' error
   93           | VAR VARIABLE '[' expression_list ']' error
   94           | VAR VARIABLE '[' expression_list error
   95           | VAR VARIABLE '[' error
   96           | VAR VARIABLE error
   97           | VAR VARIABLE '=' error
   98           | VAR error

   99 unary_statement: LOGITIZE VARIABLE
  100                | DIGITIZE VARIABLE
  101                | REDUCE VARIABLE '[' INTEGER ']'
  102                | EXTENED VARIABLE '[' INTEGER ']'
  103                | REDUCE VARIABLE '[' INTEGER error
  104                | REDUCE VARIABLE '[' error
  105                | REDUCE VARIABLE error
  106                | REDUCE error
  107                | EXTENED VARIABLE '[' INTEGER error
  108                | EXTENED VARIABLE '[' error
  109                | EXTENED VARIABLE error
  110                | EXTENED error


Terminals, with rules where they appear

$end (0) 0
'(' (40) 30 31 45 46 47 82 83 84 85
')' (41) 30 31 45 47 82 84 85
'*' (42) 33
'+' (43) 32
',' (44) 8 14 18 20
'-' (45) 34 42
'/' (47) 35
'=' (61) 69 71 88 89 90 91 92 97
'[' (91) 8 11 14 27 28 29 73 74 75 78 79 80 88 89 92 93 94 95 101 102
    103 104 107 108
']' (93) 8 11 14 27 73 78 88 89 92 93 101 102
error (256) 11 12 13 16 28 29 31 44 46 48 68 70 72 74 75 76 77 79 80
    81 83 92 93 94 95 96 97 98 103 104 105 106 107 108 109 110
INTEGER (258) 22 88 90 101 102 103 107
VARIABLE (259) 8 9 11 12 14 15 17 18 23 27 28 29 45 46 49 67 69 70
    78 79 80 81 82 83 88 89 90 91 92 93 94 95 96 97 99 100 101 102
    103 104 105 107 108 109
BOOL (260) 21 73 74 75 76 89 91
FINDEXIT (261) 10
TASK (262) 8 9 10 11 12 13
DO (263) 14 15 16
GET (264) 49
RESULT (265) 8 9 10 11
MXCOMP (266) 50
ELCOMP (267) 51
MXFALSE (268) 53
MXTRUE (269) 52
NOT (270) 43 44
AND (271) 36
LOGITIZE (272) 99
DIGITIZE (273) 100
SIZE (274) 45 46 47 48
REDUCE (275) 101 103 104 105 106
EXTENED (276) 102 107 108 109 110
R_LEFT (277) 38
R_RIGHT (278) 39
MOVE (279) 37
GET_E (280) 40
VAR (281) 88 89 90 91 92 93 94 95 96 97 98
ENDLINE (282) 5 8 9 10 11 54 55 56 57 58 82 83
FOR (283) 82 83
BOUNDARY (284) 82 83
STEP (285) 82 83
SWITCH (286) 73 74 75 76 77
PRINT (287) 67 68
PLEASE (288) 55 56
THANKS (289) 56 57
UMINUS (290)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
function_list (48)
    on left: 2 3, on right: 1 3
function_s (49)
    on left: 4 5, on right: 2 3
statement_list (50)
    on left: 6 7, on right: 7 8 9 10 11 73 74 75 76 82 83
function_definition (51)
    on left: 8 9 10 11 12 13, on right: 4 62
call_definition (52)
    on left: 14 15 16, on right: 63
declaration_list (53)
    on left: 17 18, on right: 8 11 14 18
expression_list (54)
    on left: 19 20, on right: 20 27 28 78 79 88 89 92 93 94
expression (55)
    on left: 21 22 23 24 25 26 27 28 29 30 31, on right: 19 20 30 32
    33 34 35 36 42 43 50 51 52 53 69 70 71 72 73 74 75 76 77
binary_operation (56)
    on left: 32 33 34 35 36, on right: 24
robot_operation (57)
    on left: 37 38 39 40, on right: 25 64
unary_operation (58)
    on left: 41 42 43 44 45 46 47 48 49, on right: 26
compare_operation (59)
    on left: 50 51 52 53, on right: 41
statement (60)
    on left: 54 55 56 57 58, on right: 6 7 86 87
statement_s (61)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72,
    on right: 54 55 56 57
switch_state (62)
    on left: 73 74 75 76 77, on right: 66
appeal_state (63)
    on left: 78 79 80 81, on right: 71 72
for_loop (64)
    on left: 82 83, on right: 65
compound_statement (65)
    on left: 84 85, on right: 59
block_item (66)
    on left: 86 87, on right: 85 87
definition (67)
    on left: 88 89 90 91 92 93 94 95 96 97 98, on right: 60
unary_statement (68)
    on left: 99 100 101 102 103 104 105 106 107 108 109 110,
    on right: 61


state 0

    0 $accept: . program $end

    TASK     shift, and go to state 1
    ENDLINE  shift, and go to state 2

    program              go to state 3
    function_list        go to state 4
    function_s           go to state 5
    function_definition  go to state 6


state 1

    8 function_definition: TASK . VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
    9                    | TASK . VARIABLE VARIABLE ENDLINE statement_list RESULT VARIABLE
   10                    | TASK . FINDEXIT ENDLINE statement_list RESULT
   11                    | TASK . VARIABLE VARIABLE error '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
   12                    | TASK . VARIABLE error
   13                    | TASK . error

    error     shift, and go to state 7
    VARIABLE  shift, and go to state 8
    FINDEXIT  shift, and go to state 9


state 2

    5 function_s: ENDLINE .

    $default  reduce using rule 5 (function_s)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 10


state 4

    1 program: function_list .
    3 function_list: function_list . function_s

    TASK     shift, and go to state 1
    ENDLINE  shift, and go to state 2

    $default  reduce using rule 1 (program)

    function_s           go to state 11
    function_definition  go to state 6


state 5

    2 function_list: function_s .

    $default  reduce using rule 2 (function_list)


state 6

    4 function_s: function_definition .

    $default  reduce using rule 4 (function_s)


state 7

   13 function_definition: TASK error .

    $default  reduce using rule 13 (function_definition)


state 8

    8 function_definition: TASK VARIABLE . VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
    9                    | TASK VARIABLE . VARIABLE ENDLINE statement_list RESULT VARIABLE
   11                    | TASK VARIABLE . VARIABLE error '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
   12                    | TASK VARIABLE . error

    error     shift, and go to state 12
    VARIABLE  shift, and go to state 13


state 9

   10 function_definition: TASK FINDEXIT . ENDLINE statement_list RESULT

    ENDLINE  shift, and go to state 14


state 10

    0 $accept: program $end .

    $default  accept


state 11

    3 function_list: function_list function_s .

    $default  reduce using rule 3 (function_list)


state 12

   12 function_definition: TASK VARIABLE error .

    $default  reduce using rule 12 (function_definition)


state 13

    8 function_definition: TASK VARIABLE VARIABLE . ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
    9                    | TASK VARIABLE VARIABLE . ENDLINE statement_list RESULT VARIABLE
   11                    | TASK VARIABLE VARIABLE . error '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE

    error    shift, and go to state 15
    ENDLINE  shift, and go to state 16
    ','      shift, and go to state 17


state 14

   10 function_definition: TASK FINDEXIT ENDLINE . statement_list RESULT

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    statement_list       go to state 35
    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 39
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 15

   11 function_definition: TASK VARIABLE VARIABLE error . '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE

    '['  shift, and go to state 47


state 16

    9 function_definition: TASK VARIABLE VARIABLE ENDLINE . statement_list RESULT VARIABLE

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    statement_list       go to state 48
    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 39
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 17

    8 function_definition: TASK VARIABLE VARIABLE ',' . '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE

    '['  shift, and go to state 49


state 18

   69 statement_s: VARIABLE . '=' expression
   70            | VARIABLE . error expression
   78 appeal_state: VARIABLE . '[' expression_list ']'
   79             | VARIABLE . '[' expression_list error
   80             | VARIABLE . '[' error
   81             | VARIABLE . error

    error  shift, and go to state 50
    '['    shift, and go to state 51
    '='    shift, and go to state 52


state 19

   14 call_definition: DO . VARIABLE VARIABLE ',' '[' declaration_list ']'
   15                | DO . VARIABLE VARIABLE
   16                | DO . error

    error     shift, and go to state 53
    VARIABLE  shift, and go to state 54


state 20

   99 unary_statement: LOGITIZE . VARIABLE

    VARIABLE  shift, and go to state 55


state 21

  100 unary_statement: DIGITIZE . VARIABLE

    VARIABLE  shift, and go to state 56


state 22

  101 unary_statement: REDUCE . VARIABLE '[' INTEGER ']'
  103                | REDUCE . VARIABLE '[' INTEGER error
  104                | REDUCE . VARIABLE '[' error
  105                | REDUCE . VARIABLE error
  106                | REDUCE . error

    error     shift, and go to state 57
    VARIABLE  shift, and go to state 58


state 23

  102 unary_statement: EXTENED . VARIABLE '[' INTEGER ']'
  107                | EXTENED . VARIABLE '[' INTEGER error
  108                | EXTENED . VARIABLE '[' error
  109                | EXTENED . VARIABLE error
  110                | EXTENED . error

    error     shift, and go to state 59
    VARIABLE  shift, and go to state 60


state 24

   38 robot_operation: R_LEFT .

    $default  reduce using rule 38 (robot_operation)


state 25

   39 robot_operation: R_RIGHT .

    $default  reduce using rule 39 (robot_operation)


state 26

   37 robot_operation: MOVE .

    $default  reduce using rule 37 (robot_operation)


state 27

   40 robot_operation: GET_E .

    $default  reduce using rule 40 (robot_operation)


state 28

   88 definition: VAR . VARIABLE '[' expression_list ']' '=' INTEGER
   89           | VAR . VARIABLE '[' expression_list ']' '=' BOOL
   90           | VAR . VARIABLE '=' INTEGER
   91           | VAR . VARIABLE '=' BOOL
   92           | VAR . VARIABLE '[' expression_list ']' '=' error
   93           | VAR . VARIABLE '[' expression_list ']' error
   94           | VAR . VARIABLE '[' expression_list error
   95           | VAR . VARIABLE '[' error
   96           | VAR . VARIABLE error
   97           | VAR . VARIABLE '=' error
   98           | VAR . error

    error     shift, and go to state 61
    VARIABLE  shift, and go to state 62


state 29

   58 statement: ENDLINE .

    $default  reduce using rule 58 (statement)


state 30

   82 for_loop: FOR . VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')'
   83         | FOR . VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list error

    VARIABLE  shift, and go to state 63


state 31

   73 switch_state: SWITCH . expression BOOL statement_list '[' BOOL statement_list ']'
   74             | SWITCH . expression BOOL statement_list '[' BOOL statement_list error
   75             | SWITCH . expression BOOL statement_list '[' error
   76             | SWITCH . expression BOOL statement_list error BOOL
   77             | SWITCH . expression error

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 76
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 32

   67 statement_s: PRINT . VARIABLE
   68            | PRINT . error

    error     shift, and go to state 81
    VARIABLE  shift, and go to state 82


state 33

   55 statement: PLEASE . statement_s ENDLINE
   56          | PLEASE . statement_s THANKS ENDLINE

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    '('       shift, and go to state 34

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement_s          go to state 83
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 34

   84 compound_statement: '(' . ')'
   85                   | '(' . block_item ')'

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34
    ')'       shift, and go to state 84

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 85
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    block_item           go to state 86
    definition           go to state 45
    unary_statement      go to state 46


state 35

    7 statement_list: statement_list . statement
   10 function_definition: TASK FINDEXIT ENDLINE statement_list . RESULT

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    RESULT    shift, and go to state 87
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 88
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 36

   62 statement_s: function_definition .

    $default  reduce using rule 62 (statement_s)


state 37

   63 statement_s: call_definition .

    $default  reduce using rule 63 (statement_s)


state 38

   64 statement_s: robot_operation .

    $default  reduce using rule 64 (statement_s)


state 39

    6 statement_list: statement .

    $default  reduce using rule 6 (statement_list)


state 40

   54 statement: statement_s . ENDLINE
   57          | statement_s . THANKS ENDLINE

    ENDLINE  shift, and go to state 89
    THANKS   shift, and go to state 90


state 41

   66 statement_s: switch_state .

    $default  reduce using rule 66 (statement_s)


state 42

   71 statement_s: appeal_state . '=' expression
   72            | appeal_state . error expression

    error  shift, and go to state 91
    '='    shift, and go to state 92


state 43

   65 statement_s: for_loop .

    $default  reduce using rule 65 (statement_s)


state 44

   59 statement_s: compound_statement .

    $default  reduce using rule 59 (statement_s)


state 45

   60 statement_s: definition .

    $default  reduce using rule 60 (statement_s)


state 46

   61 statement_s: unary_statement .

    $default  reduce using rule 61 (statement_s)


state 47

   11 function_definition: TASK VARIABLE VARIABLE error '[' . declaration_list ']' ENDLINE statement_list RESULT VARIABLE

    VARIABLE  shift, and go to state 93

    declaration_list  go to state 94


state 48

    7 statement_list: statement_list . statement
    9 function_definition: TASK VARIABLE VARIABLE ENDLINE statement_list . RESULT VARIABLE

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    RESULT    shift, and go to state 95
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 88
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 49

    8 function_definition: TASK VARIABLE VARIABLE ',' '[' . declaration_list ']' ENDLINE statement_list RESULT VARIABLE

    VARIABLE  shift, and go to state 93

    declaration_list  go to state 96


state 50

   70 statement_s: VARIABLE error . expression
   81 appeal_state: VARIABLE error .

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    $default  reduce using rule 81 (appeal_state)

    expression         go to state 97
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 51

   78 appeal_state: VARIABLE '[' . expression_list ']'
   79             | VARIABLE '[' . expression_list error
   80             | VARIABLE '[' . error

    error     shift, and go to state 98
    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression_list    go to state 99
    expression         go to state 100
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 52

   69 statement_s: VARIABLE '=' . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 101
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 53

   16 call_definition: DO error .

    $default  reduce using rule 16 (call_definition)


state 54

   14 call_definition: DO VARIABLE . VARIABLE ',' '[' declaration_list ']'
   15                | DO VARIABLE . VARIABLE

    VARIABLE  shift, and go to state 102


state 55

   99 unary_statement: LOGITIZE VARIABLE .

    $default  reduce using rule 99 (unary_statement)


state 56

  100 unary_statement: DIGITIZE VARIABLE .

    $default  reduce using rule 100 (unary_statement)


state 57

  106 unary_statement: REDUCE error .

    $default  reduce using rule 106 (unary_statement)


state 58

  101 unary_statement: REDUCE VARIABLE . '[' INTEGER ']'
  103                | REDUCE VARIABLE . '[' INTEGER error
  104                | REDUCE VARIABLE . '[' error
  105                | REDUCE VARIABLE . error

    error  shift, and go to state 103
    '['    shift, and go to state 104


state 59

  110 unary_statement: EXTENED error .

    $default  reduce using rule 110 (unary_statement)


state 60

  102 unary_statement: EXTENED VARIABLE . '[' INTEGER ']'
  107                | EXTENED VARIABLE . '[' INTEGER error
  108                | EXTENED VARIABLE . '[' error
  109                | EXTENED VARIABLE . error

    error  shift, and go to state 105
    '['    shift, and go to state 106


state 61

   98 definition: VAR error .

    $default  reduce using rule 98 (definition)


state 62

   88 definition: VAR VARIABLE . '[' expression_list ']' '=' INTEGER
   89           | VAR VARIABLE . '[' expression_list ']' '=' BOOL
   90           | VAR VARIABLE . '=' INTEGER
   91           | VAR VARIABLE . '=' BOOL
   92           | VAR VARIABLE . '[' expression_list ']' '=' error
   93           | VAR VARIABLE . '[' expression_list ']' error
   94           | VAR VARIABLE . '[' expression_list error
   95           | VAR VARIABLE . '[' error
   96           | VAR VARIABLE . error
   97           | VAR VARIABLE . '=' error

    error  shift, and go to state 107
    '['    shift, and go to state 108
    '='    shift, and go to state 109


state 63

   82 for_loop: FOR VARIABLE . BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')'
   83         | FOR VARIABLE . BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list error

    BOUNDARY  shift, and go to state 110


state 64

   22 expression: INTEGER .

    $default  reduce using rule 22 (expression)


state 65

   23 expression: VARIABLE .
   27           | VARIABLE . '[' expression_list ']'
   28           | VARIABLE . '[' expression_list error
   29           | VARIABLE . '[' error

    '['  shift, and go to state 111

    $default  reduce using rule 23 (expression)


state 66

   21 expression: BOOL .

    $default  reduce using rule 21 (expression)


state 67

   49 unary_operation: GET . VARIABLE

    VARIABLE  shift, and go to state 112


state 68

   50 compare_operation: MXCOMP . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 113
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 69

   51 compare_operation: ELCOMP . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 114
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 70

   53 compare_operation: MXFALSE . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 115
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 71

   52 compare_operation: MXTRUE . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 116
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 72

   43 unary_operation: NOT . expression
   44                | NOT . error

    error     shift, and go to state 117
    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 118
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 73

   45 unary_operation: SIZE . '(' VARIABLE ')'
   46                | SIZE . '(' VARIABLE error
   47                | SIZE . '(' ')'
   48                | SIZE . error

    error  shift, and go to state 119
    '('    shift, and go to state 120


state 74

   42 unary_operation: '-' . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 121
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 75

   30 expression: '(' . expression ')'
   31           | '(' . error ')'

    error     shift, and go to state 122
    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 123
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 76

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   73 switch_state: SWITCH expression . BOOL statement_list '[' BOOL statement_list ']'
   74             | SWITCH expression . BOOL statement_list '[' BOOL statement_list error
   75             | SWITCH expression . BOOL statement_list '[' error
   76             | SWITCH expression . BOOL statement_list error BOOL
   77             | SWITCH expression . error

    error  shift, and go to state 124
    BOOL   shift, and go to state 125
    AND    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130


state 77

   24 expression: binary_operation .

    $default  reduce using rule 24 (expression)


state 78

   25 expression: robot_operation .

    $default  reduce using rule 25 (expression)


state 79

   26 expression: unary_operation .

    $default  reduce using rule 26 (expression)


state 80

   41 unary_operation: compare_operation .

    $default  reduce using rule 41 (unary_operation)


state 81

   68 statement_s: PRINT error .

    $default  reduce using rule 68 (statement_s)


state 82

   67 statement_s: PRINT VARIABLE .

    $default  reduce using rule 67 (statement_s)


state 83

   55 statement: PLEASE statement_s . ENDLINE
   56          | PLEASE statement_s . THANKS ENDLINE

    ENDLINE  shift, and go to state 131
    THANKS   shift, and go to state 132


state 84

   84 compound_statement: '(' ')' .

    $default  reduce using rule 84 (compound_statement)


state 85

   86 block_item: statement .

    $default  reduce using rule 86 (block_item)


state 86

   85 compound_statement: '(' block_item . ')'
   87 block_item: block_item . statement

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34
    ')'       shift, and go to state 133

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 134
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 87

   10 function_definition: TASK FINDEXIT ENDLINE statement_list RESULT .

    $default  reduce using rule 10 (function_definition)


state 88

    7 statement_list: statement_list statement .

    $default  reduce using rule 7 (statement_list)


state 89

   54 statement: statement_s ENDLINE .

    $default  reduce using rule 54 (statement)


state 90

   57 statement: statement_s THANKS . ENDLINE

    ENDLINE  shift, and go to state 135


state 91

   72 statement_s: appeal_state error . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 136
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 92

   71 statement_s: appeal_state '=' . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 137
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 93

   17 declaration_list: VARIABLE .

    $default  reduce using rule 17 (declaration_list)


state 94

   11 function_definition: TASK VARIABLE VARIABLE error '[' declaration_list . ']' ENDLINE statement_list RESULT VARIABLE
   18 declaration_list: declaration_list . ',' VARIABLE

    ']'  shift, and go to state 138
    ','  shift, and go to state 139


state 95

    9 function_definition: TASK VARIABLE VARIABLE ENDLINE statement_list RESULT . VARIABLE

    VARIABLE  shift, and go to state 140


state 96

    8 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list . ']' ENDLINE statement_list RESULT VARIABLE
   18 declaration_list: declaration_list . ',' VARIABLE

    ']'  shift, and go to state 141
    ','  shift, and go to state 139


state 97

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   70 statement_s: VARIABLE error expression .

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 70 (statement_s)


state 98

   80 appeal_state: VARIABLE '[' error .

    $default  reduce using rule 80 (appeal_state)


state 99

   20 expression_list: expression_list . ',' expression
   78 appeal_state: VARIABLE '[' expression_list . ']'
   79             | VARIABLE '[' expression_list . error

    error  shift, and go to state 142
    ']'    shift, and go to state 143
    ','    shift, and go to state 144


state 100

   19 expression_list: expression .
   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 19 (expression_list)


state 101

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   69 statement_s: VARIABLE '=' expression .

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 69 (statement_s)


state 102

   14 call_definition: DO VARIABLE VARIABLE . ',' '[' declaration_list ']'
   15                | DO VARIABLE VARIABLE .

    ','  shift, and go to state 145

    $default  reduce using rule 15 (call_definition)


state 103

  105 unary_statement: REDUCE VARIABLE error .

    $default  reduce using rule 105 (unary_statement)


state 104

  101 unary_statement: REDUCE VARIABLE '[' . INTEGER ']'
  103                | REDUCE VARIABLE '[' . INTEGER error
  104                | REDUCE VARIABLE '[' . error

    error    shift, and go to state 146
    INTEGER  shift, and go to state 147


state 105

  109 unary_statement: EXTENED VARIABLE error .

    $default  reduce using rule 109 (unary_statement)


state 106

  102 unary_statement: EXTENED VARIABLE '[' . INTEGER ']'
  107                | EXTENED VARIABLE '[' . INTEGER error
  108                | EXTENED VARIABLE '[' . error

    error    shift, and go to state 148
    INTEGER  shift, and go to state 149


state 107

   96 definition: VAR VARIABLE error .

    $default  reduce using rule 96 (definition)


state 108

   88 definition: VAR VARIABLE '[' . expression_list ']' '=' INTEGER
   89           | VAR VARIABLE '[' . expression_list ']' '=' BOOL
   92           | VAR VARIABLE '[' . expression_list ']' '=' error
   93           | VAR VARIABLE '[' . expression_list ']' error
   94           | VAR VARIABLE '[' . expression_list error
   95           | VAR VARIABLE '[' . error

    error     shift, and go to state 150
    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression_list    go to state 151
    expression         go to state 100
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 109

   90 definition: VAR VARIABLE '=' . INTEGER
   91           | VAR VARIABLE '=' . BOOL
   97           | VAR VARIABLE '=' . error

    error    shift, and go to state 152
    INTEGER  shift, and go to state 153
    BOOL     shift, and go to state 154


state 110

   82 for_loop: FOR VARIABLE BOUNDARY . VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')'
   83         | FOR VARIABLE BOUNDARY . VARIABLE STEP VARIABLE ENDLINE '(' statement_list error

    VARIABLE  shift, and go to state 155


state 111

   27 expression: VARIABLE '[' . expression_list ']'
   28           | VARIABLE '[' . expression_list error
   29           | VARIABLE '[' . error

    error     shift, and go to state 156
    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression_list    go to state 157
    expression         go to state 100
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 112

   49 unary_operation: GET VARIABLE .

    $default  reduce using rule 49 (unary_operation)


state 113

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   50 compare_operation: MXCOMP expression .

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    AND       [reduce using rule 50 (compare_operation)]
    '+'       [reduce using rule 50 (compare_operation)]
    '-'       [reduce using rule 50 (compare_operation)]
    '*'       [reduce using rule 50 (compare_operation)]
    '/'       [reduce using rule 50 (compare_operation)]
    $default  reduce using rule 50 (compare_operation)


state 114

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   51 compare_operation: ELCOMP expression .

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    AND       [reduce using rule 51 (compare_operation)]
    '+'       [reduce using rule 51 (compare_operation)]
    '-'       [reduce using rule 51 (compare_operation)]
    '*'       [reduce using rule 51 (compare_operation)]
    '/'       [reduce using rule 51 (compare_operation)]
    $default  reduce using rule 51 (compare_operation)


state 115

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   53 compare_operation: MXFALSE expression .

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    AND       [reduce using rule 53 (compare_operation)]
    '+'       [reduce using rule 53 (compare_operation)]
    '-'       [reduce using rule 53 (compare_operation)]
    '*'       [reduce using rule 53 (compare_operation)]
    '/'       [reduce using rule 53 (compare_operation)]
    $default  reduce using rule 53 (compare_operation)


state 116

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   52 compare_operation: MXTRUE expression .

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    AND       [reduce using rule 52 (compare_operation)]
    '+'       [reduce using rule 52 (compare_operation)]
    '-'       [reduce using rule 52 (compare_operation)]
    '*'       [reduce using rule 52 (compare_operation)]
    '/'       [reduce using rule 52 (compare_operation)]
    $default  reduce using rule 52 (compare_operation)


state 117

   44 unary_operation: NOT error .

    $default  reduce using rule 44 (unary_operation)


state 118

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   43 unary_operation: NOT expression .

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    AND       [reduce using rule 43 (unary_operation)]
    '+'       [reduce using rule 43 (unary_operation)]
    '-'       [reduce using rule 43 (unary_operation)]
    '*'       [reduce using rule 43 (unary_operation)]
    '/'       [reduce using rule 43 (unary_operation)]
    $default  reduce using rule 43 (unary_operation)


state 119

   48 unary_operation: SIZE error .

    $default  reduce using rule 48 (unary_operation)


state 120

   45 unary_operation: SIZE '(' . VARIABLE ')'
   46                | SIZE '(' . VARIABLE error
   47                | SIZE '(' . ')'

    VARIABLE  shift, and go to state 158
    ')'       shift, and go to state 159


state 121

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   42 unary_operation: '-' expression .

    $default  reduce using rule 42 (unary_operation)


state 122

   31 expression: '(' error . ')'

    ')'  shift, and go to state 160


state 123

   30 expression: '(' expression . ')'
   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130
    ')'  shift, and go to state 161


state 124

   77 switch_state: SWITCH expression error .

    $default  reduce using rule 77 (switch_state)


state 125

   73 switch_state: SWITCH expression BOOL . statement_list '[' BOOL statement_list ']'
   74             | SWITCH expression BOOL . statement_list '[' BOOL statement_list error
   75             | SWITCH expression BOOL . statement_list '[' error
   76             | SWITCH expression BOOL . statement_list error BOOL

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    statement_list       go to state 162
    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 39
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 126

   36 binary_operation: expression AND . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 163
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 127

   32 binary_operation: expression '+' . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 164
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 128

   34 binary_operation: expression '-' . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 165
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 129

   33 binary_operation: expression '*' . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 166
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 130

   35 binary_operation: expression '/' . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 167
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 131

   55 statement: PLEASE statement_s ENDLINE .

    $default  reduce using rule 55 (statement)


state 132

   56 statement: PLEASE statement_s THANKS . ENDLINE

    ENDLINE  shift, and go to state 168


state 133

   85 compound_statement: '(' block_item ')' .

    $default  reduce using rule 85 (compound_statement)


state 134

   87 block_item: block_item statement .

    $default  reduce using rule 87 (block_item)


state 135

   57 statement: statement_s THANKS ENDLINE .

    $default  reduce using rule 57 (statement)


state 136

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   72 statement_s: appeal_state error expression .

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 72 (statement_s)


state 137

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   71 statement_s: appeal_state '=' expression .

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 71 (statement_s)


state 138

   11 function_definition: TASK VARIABLE VARIABLE error '[' declaration_list ']' . ENDLINE statement_list RESULT VARIABLE

    ENDLINE  shift, and go to state 169


state 139

   18 declaration_list: declaration_list ',' . VARIABLE

    VARIABLE  shift, and go to state 170


state 140

    9 function_definition: TASK VARIABLE VARIABLE ENDLINE statement_list RESULT VARIABLE .

    $default  reduce using rule 9 (function_definition)


state 141

    8 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' . ENDLINE statement_list RESULT VARIABLE

    ENDLINE  shift, and go to state 171


state 142

   79 appeal_state: VARIABLE '[' expression_list error .

    $default  reduce using rule 79 (appeal_state)


state 143

   78 appeal_state: VARIABLE '[' expression_list ']' .

    $default  reduce using rule 78 (appeal_state)


state 144

   20 expression_list: expression_list ',' . expression

    INTEGER   shift, and go to state 64
    VARIABLE  shift, and go to state 65
    BOOL      shift, and go to state 66
    GET       shift, and go to state 67
    MXCOMP    shift, and go to state 68
    ELCOMP    shift, and go to state 69
    MXFALSE   shift, and go to state 70
    MXTRUE    shift, and go to state 71
    NOT       shift, and go to state 72
    SIZE      shift, and go to state 73
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    '-'       shift, and go to state 74
    '('       shift, and go to state 75

    expression         go to state 172
    binary_operation   go to state 77
    robot_operation    go to state 78
    unary_operation    go to state 79
    compare_operation  go to state 80


state 145

   14 call_definition: DO VARIABLE VARIABLE ',' . '[' declaration_list ']'

    '['  shift, and go to state 173


state 146

  104 unary_statement: REDUCE VARIABLE '[' error .

    $default  reduce using rule 104 (unary_statement)


state 147

  101 unary_statement: REDUCE VARIABLE '[' INTEGER . ']'
  103                | REDUCE VARIABLE '[' INTEGER . error

    error  shift, and go to state 174
    ']'    shift, and go to state 175


state 148

  108 unary_statement: EXTENED VARIABLE '[' error .

    $default  reduce using rule 108 (unary_statement)


state 149

  102 unary_statement: EXTENED VARIABLE '[' INTEGER . ']'
  107                | EXTENED VARIABLE '[' INTEGER . error

    error  shift, and go to state 176
    ']'    shift, and go to state 177


state 150

   95 definition: VAR VARIABLE '[' error .

    $default  reduce using rule 95 (definition)


state 151

   20 expression_list: expression_list . ',' expression
   88 definition: VAR VARIABLE '[' expression_list . ']' '=' INTEGER
   89           | VAR VARIABLE '[' expression_list . ']' '=' BOOL
   92           | VAR VARIABLE '[' expression_list . ']' '=' error
   93           | VAR VARIABLE '[' expression_list . ']' error
   94           | VAR VARIABLE '[' expression_list . error

    error  shift, and go to state 178
    ']'    shift, and go to state 179
    ','    shift, and go to state 144


state 152

   97 definition: VAR VARIABLE '=' error .

    $default  reduce using rule 97 (definition)


state 153

   90 definition: VAR VARIABLE '=' INTEGER .

    $default  reduce using rule 90 (definition)


state 154

   91 definition: VAR VARIABLE '=' BOOL .

    $default  reduce using rule 91 (definition)


state 155

   82 for_loop: FOR VARIABLE BOUNDARY VARIABLE . STEP VARIABLE ENDLINE '(' statement_list ')'
   83         | FOR VARIABLE BOUNDARY VARIABLE . STEP VARIABLE ENDLINE '(' statement_list error

    STEP  shift, and go to state 180


state 156

   29 expression: VARIABLE '[' error .

    $default  reduce using rule 29 (expression)


state 157

   20 expression_list: expression_list . ',' expression
   27 expression: VARIABLE '[' expression_list . ']'
   28           | VARIABLE '[' expression_list . error

    error  shift, and go to state 181
    ']'    shift, and go to state 182
    ','    shift, and go to state 144


state 158

   45 unary_operation: SIZE '(' VARIABLE . ')'
   46                | SIZE '(' VARIABLE . error

    error  shift, and go to state 183
    ')'    shift, and go to state 184


state 159

   47 unary_operation: SIZE '(' ')' .

    $default  reduce using rule 47 (unary_operation)


state 160

   31 expression: '(' error ')' .

    $default  reduce using rule 31 (expression)


state 161

   30 expression: '(' expression ')' .

    $default  reduce using rule 30 (expression)


state 162

    7 statement_list: statement_list . statement
   73 switch_state: SWITCH expression BOOL statement_list . '[' BOOL statement_list ']'
   74             | SWITCH expression BOOL statement_list . '[' BOOL statement_list error
   75             | SWITCH expression BOOL statement_list . '[' error
   76             | SWITCH expression BOOL statement_list . error BOOL

    error     shift, and go to state 185
    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34
    '['       shift, and go to state 186

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 88
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 163

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression
   36                 | expression AND expression .

    $default  reduce using rule 36 (binary_operation)


state 164

   32 binary_operation: expression . '+' expression
   32                 | expression '+' expression .
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression

    AND  shift, and go to state 126
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 32 (binary_operation)


state 165

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   34                 | expression '-' expression .
   35                 | expression . '/' expression
   36                 | expression . AND expression

    AND  shift, and go to state 126
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 34 (binary_operation)


state 166

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   33                 | expression '*' expression .
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression

    $default  reduce using rule 33 (binary_operation)


state 167

   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   35                 | expression '/' expression .
   36                 | expression . AND expression

    $default  reduce using rule 35 (binary_operation)


state 168

   56 statement: PLEASE statement_s THANKS ENDLINE .

    $default  reduce using rule 56 (statement)


state 169

   11 function_definition: TASK VARIABLE VARIABLE error '[' declaration_list ']' ENDLINE . statement_list RESULT VARIABLE

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    statement_list       go to state 187
    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 39
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 170

   18 declaration_list: declaration_list ',' VARIABLE .

    $default  reduce using rule 18 (declaration_list)


state 171

    8 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE . statement_list RESULT VARIABLE

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    statement_list       go to state 188
    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 39
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 172

   20 expression_list: expression_list ',' expression .
   32 binary_operation: expression . '+' expression
   33                 | expression . '*' expression
   34                 | expression . '-' expression
   35                 | expression . '/' expression
   36                 | expression . AND expression

    AND  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 20 (expression_list)


state 173

   14 call_definition: DO VARIABLE VARIABLE ',' '[' . declaration_list ']'

    VARIABLE  shift, and go to state 93

    declaration_list  go to state 189


state 174

  103 unary_statement: REDUCE VARIABLE '[' INTEGER error .

    $default  reduce using rule 103 (unary_statement)


state 175

  101 unary_statement: REDUCE VARIABLE '[' INTEGER ']' .

    $default  reduce using rule 101 (unary_statement)


state 176

  107 unary_statement: EXTENED VARIABLE '[' INTEGER error .

    $default  reduce using rule 107 (unary_statement)


state 177

  102 unary_statement: EXTENED VARIABLE '[' INTEGER ']' .

    $default  reduce using rule 102 (unary_statement)


state 178

   94 definition: VAR VARIABLE '[' expression_list error .

    $default  reduce using rule 94 (definition)


state 179

   88 definition: VAR VARIABLE '[' expression_list ']' . '=' INTEGER
   89           | VAR VARIABLE '[' expression_list ']' . '=' BOOL
   92           | VAR VARIABLE '[' expression_list ']' . '=' error
   93           | VAR VARIABLE '[' expression_list ']' . error

    error  shift, and go to state 190
    '='    shift, and go to state 191


state 180

   82 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP . VARIABLE ENDLINE '(' statement_list ')'
   83         | FOR VARIABLE BOUNDARY VARIABLE STEP . VARIABLE ENDLINE '(' statement_list error

    VARIABLE  shift, and go to state 192


state 181

   28 expression: VARIABLE '[' expression_list error .

    $default  reduce using rule 28 (expression)


state 182

   27 expression: VARIABLE '[' expression_list ']' .

    $default  reduce using rule 27 (expression)


state 183

   46 unary_operation: SIZE '(' VARIABLE error .

    $default  reduce using rule 46 (unary_operation)


state 184

   45 unary_operation: SIZE '(' VARIABLE ')' .

    $default  reduce using rule 45 (unary_operation)


state 185

   76 switch_state: SWITCH expression BOOL statement_list error . BOOL

    BOOL  shift, and go to state 193


state 186

   73 switch_state: SWITCH expression BOOL statement_list '[' . BOOL statement_list ']'
   74             | SWITCH expression BOOL statement_list '[' . BOOL statement_list error
   75             | SWITCH expression BOOL statement_list '[' . error

    error  shift, and go to state 194
    BOOL   shift, and go to state 195


state 187

    7 statement_list: statement_list . statement
   11 function_definition: TASK VARIABLE VARIABLE error '[' declaration_list ']' ENDLINE statement_list . RESULT VARIABLE

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    RESULT    shift, and go to state 196
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 88
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 188

    7 statement_list: statement_list . statement
    8 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list . RESULT VARIABLE

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    RESULT    shift, and go to state 197
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 88
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 189

   14 call_definition: DO VARIABLE VARIABLE ',' '[' declaration_list . ']'
   18 declaration_list: declaration_list . ',' VARIABLE

    ']'  shift, and go to state 198
    ','  shift, and go to state 139


state 190

   93 definition: VAR VARIABLE '[' expression_list ']' error .

    $default  reduce using rule 93 (definition)


state 191

   88 definition: VAR VARIABLE '[' expression_list ']' '=' . INTEGER
   89           | VAR VARIABLE '[' expression_list ']' '=' . BOOL
   92           | VAR VARIABLE '[' expression_list ']' '=' . error

    error    shift, and go to state 199
    INTEGER  shift, and go to state 200
    BOOL     shift, and go to state 201


state 192

   82 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE . ENDLINE '(' statement_list ')'
   83         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE . ENDLINE '(' statement_list error

    ENDLINE  shift, and go to state 202


state 193

   76 switch_state: SWITCH expression BOOL statement_list error BOOL .

    $default  reduce using rule 76 (switch_state)


state 194

   75 switch_state: SWITCH expression BOOL statement_list '[' error .

    $default  reduce using rule 75 (switch_state)


state 195

   73 switch_state: SWITCH expression BOOL statement_list '[' BOOL . statement_list ']'
   74             | SWITCH expression BOOL statement_list '[' BOOL . statement_list error

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    statement_list       go to state 203
    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 39
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 196

   11 function_definition: TASK VARIABLE VARIABLE error '[' declaration_list ']' ENDLINE statement_list RESULT . VARIABLE

    VARIABLE  shift, and go to state 204


state 197

    8 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT . VARIABLE

    VARIABLE  shift, and go to state 205


state 198

   14 call_definition: DO VARIABLE VARIABLE ',' '[' declaration_list ']' .

    $default  reduce using rule 14 (call_definition)


state 199

   92 definition: VAR VARIABLE '[' expression_list ']' '=' error .

    $default  reduce using rule 92 (definition)


state 200

   88 definition: VAR VARIABLE '[' expression_list ']' '=' INTEGER .

    $default  reduce using rule 88 (definition)


state 201

   89 definition: VAR VARIABLE '[' expression_list ']' '=' BOOL .

    $default  reduce using rule 89 (definition)


state 202

   82 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE . '(' statement_list ')'
   83         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE . '(' statement_list error

    '('  shift, and go to state 206


state 203

    7 statement_list: statement_list . statement
   73 switch_state: SWITCH expression BOOL statement_list '[' BOOL statement_list . ']'
   74             | SWITCH expression BOOL statement_list '[' BOOL statement_list . error

    error     shift, and go to state 207
    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34
    ']'       shift, and go to state 208

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 88
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 204

   11 function_definition: TASK VARIABLE VARIABLE error '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE .

    $default  reduce using rule 11 (function_definition)


state 205

    8 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE .

    $default  reduce using rule 8 (function_definition)


state 206

   82 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' . statement_list ')'
   83         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' . statement_list error

    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34

    statement_list       go to state 209
    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 39
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 207

   74 switch_state: SWITCH expression BOOL statement_list '[' BOOL statement_list error .

    $default  reduce using rule 74 (switch_state)


state 208

   73 switch_state: SWITCH expression BOOL statement_list '[' BOOL statement_list ']' .

    $default  reduce using rule 73 (switch_state)


state 209

    7 statement_list: statement_list . statement
   82 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list . ')'
   83         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list . error

    error     shift, and go to state 210
    VARIABLE  shift, and go to state 18
    TASK      shift, and go to state 1
    DO        shift, and go to state 19
    LOGITIZE  shift, and go to state 20
    DIGITIZE  shift, and go to state 21
    REDUCE    shift, and go to state 22
    EXTENED   shift, and go to state 23
    R_LEFT    shift, and go to state 24
    R_RIGHT   shift, and go to state 25
    MOVE      shift, and go to state 26
    GET_E     shift, and go to state 27
    VAR       shift, and go to state 28
    ENDLINE   shift, and go to state 29
    FOR       shift, and go to state 30
    SWITCH    shift, and go to state 31
    PRINT     shift, and go to state 32
    PLEASE    shift, and go to state 33
    '('       shift, and go to state 34
    ')'       shift, and go to state 211

    function_definition  go to state 36
    call_definition      go to state 37
    robot_operation      go to state 38
    statement            go to state 88
    statement_s          go to state 40
    switch_state         go to state 41
    appeal_state         go to state 42
    for_loop             go to state 43
    compound_statement   go to state 44
    definition           go to state 45
    unary_statement      go to state 46


state 210

   83 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list error .

    $default  reduce using rule 83 (for_loop)


state 211

   82 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')' .

    $default  reduce using rule 82 (for_loop)
