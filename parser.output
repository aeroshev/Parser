State 52 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 101 conflicts: 6 shift/reduce
State 102 conflicts: 6 shift/reduce
State 103 conflicts: 6 shift/reduce
State 104 conflicts: 6 shift/reduce
State 106 conflicts: 6 shift/reduce
State 109 conflicts: 2 shift/reduce
State 149 conflicts: 6 shift/reduce
State 151 conflicts: 6 shift/reduce
State 152 conflicts: 2 shift/reduce
State 153 conflicts: 2 shift/reduce
State 154 conflicts: 2 shift/reduce
State 155 conflicts: 2 shift/reduce
State 157 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: FINDEXIT ENDLINE statement_list

    2 statement_list: statement
    3               | statement_list statement

    4 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
    5                    | TASK VARIABLE VARIABLE ENDLINE statement_list RESULT VARIABLE
    6                    | TASK error

    7 call_definition: DO VARIABLE VARIABLE ',' '[' declaration_list ']'
    8                | DO VARIABLE VARIABLE
    9                | DO error

   10 declaration_list: VARIABLE
   11                 | declaration_list ',' VARIABLE

   12 expression_list: expression
   13                | expression_list ',' expression

   14 expression: BOOL
   15           | INTEGER
   16           | VARIABLE
   17           | binary_operation
   18           | robot_operation
   19           | unary_operation
   20           | VARIABLE '[' expression_list ']'
   21           | VARIABLE '[' expression_list error
   22           | VARIABLE '[' error
   23           | VARIABLE error
   24           | '(' expression ')'

   25 binary_operation: expression '+' expression
   26                 | expression '*' expression
   27                 | expression '-' expression
   28                 | expression '/' expression
   29                 | expression AND expression
   30                 | expression error expression

   31 robot_operation: MOVE
   32                | R_LEFT
   33                | R_RIGHT
   34                | GET_E

   35 unary_operation: compare_operation
   36                | '-' expression
   37                | NOT expression
   38                | NOT error
   39                | SIZE '(' VARIABLE ')'
   40                | SIZE '(' VARIABLE error
   41                | SIZE '(' ')'
   42                | SIZE error
   43                | GET VARIABLE
   44                | GET error

   45 compare_operation: MXCOMP expression
   46                  | ELCOMP expression
   47                  | MXTRUE expression
   48                  | MXFALSE expression

   49 statement: statement_s ENDLINE
   50          | PLEASE statement_s ENDLINE
   51          | PLEASE statement_s THANKS ENDLINE
   52          | statement_s THANKS ENDLINE
   53          | ENDLINE

   54 statement_s: compound_statement
   55            | definition
   56            | unary_statement
   57            | function_definition
   58            | call_definition
   59            | robot_operation
   60            | for_loop
   61            | switch_state
   62            | PRINT VARIABLE
   63            | PRINT error
   64            | VARIABLE '=' expression
   65            | VARIABLE error expression
   66            | appeal_state '=' expression
   67            | appeal_state error expression

   68 switch_state: SWITCH expression BOOL statement_list '[' BOOL statement_list ']'

   69 appeal_state: VARIABLE '[' expression_list ']'
   70             | VARIABLE '[' expression_list error
   71             | VARIABLE '[' error
   72             | VARIABLE error

   73 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')'
   74         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list error ENDLINE

   75 compound_statement: '(' ')'
   76                   | '(' block_item ')'

   77 block_item: statement
   78           | block_item statement

   79 definition: VAR VARIABLE '[' expression_list ']' '=' INTEGER
   80           | VAR VARIABLE '[' expression_list ']' '=' BOOL
   81           | VAR VARIABLE '=' INTEGER
   82           | VAR VARIABLE '=' BOOL
   83           | VAR VARIABLE '[' expression_list ']' '=' error ENDLINE
   84           | VAR VARIABLE '[' expression_list ']' error ENDLINE
   85           | VAR VARIABLE '[' expression_list error ENDLINE
   86           | VAR VARIABLE '[' error ENDLINE
   87           | VAR VARIABLE error ENDLINE
   88           | VAR VARIABLE '=' error ENDLINE
   89           | VAR error ENDLINE

   90 unary_statement: LOGITIZE VARIABLE
   91                | DIGITIZE VARIABLE
   92                | REDUCE VARIABLE '[' INTEGER ']'
   93                | EXTENED VARIABLE '[' INTEGER ']'
   94                | REDUCE VARIABLE '[' INTEGER error ENDLINE
   95                | REDUCE VARIABLE '[' error ENDLINE
   96                | REDUCE VARIABLE error ENDLINE
   97                | REDUCE error ENDLINE
   98                | EXTENED VARIABLE '[' INTEGER error ENDLINE
   99                | EXTENED VARIABLE '[' error ENDLINE
  100                | EXTENED VARIABLE error ENDLINE
  101                | EXTENED error ENDLINE


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24 39 40 41 73 74 75 76
')' (41) 24 39 41 73 75 76
'*' (42) 26
'+' (43) 25
',' (44) 4 7 11 13
'-' (45) 27 36
'/' (47) 28
'=' (61) 64 66 79 80 81 82 83 88
'[' (91) 4 7 20 21 22 68 69 70 71 79 80 83 84 85 86 92 93 94 95 98
    99
']' (93) 4 7 20 68 69 79 80 83 84 92 93
error (256) 6 9 21 22 23 30 38 40 42 44 63 65 67 70 71 72 74 83 84
    85 86 87 88 89 94 95 96 97 98 99 100 101
INTEGER (258) 15 79 81 92 93 94 98
VARIABLE (259) 4 5 7 8 10 11 16 20 21 22 23 39 40 43 62 64 65 69 70
    71 72 73 74 79 80 81 82 83 84 85 86 87 88 90 91 92 93 94 95 96
    98 99 100
BOOL (260) 14 68 80 82
FINDEXIT (261) 1
TASK (262) 4 5 6
DO (263) 7 8 9
GET (264) 43 44
RESULT (265) 4 5
MXCOMP (266) 45
ELCOMP (267) 46
MXFALSE (268) 48
MXTRUE (269) 47
NOT (270) 37 38
AND (271) 29
LOGITIZE (272) 90
DIGITIZE (273) 91
SIZE (274) 39 40 41 42
REDUCE (275) 92 94 95 96 97
EXTENED (276) 93 98 99 100 101
R_LEFT (277) 32
R_RIGHT (278) 33
MOVE (279) 31
GET_E (280) 34
VAR (281) 79 80 81 82 83 84 85 86 87 88 89
ENDLINE (282) 1 4 5 49 50 51 52 53 73 74 83 84 85 86 87 88 89 94 95
    96 97 98 99 100 101
FOR (283) 73 74
BOUNDARY (284) 73 74
STEP (285) 73 74
SWITCH (286) 68
PRINT (287) 62 63
PLEASE (288) 50 51
THANKS (289) 51 52
UMINUS (290)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
statement_list (48)
    on left: 2 3, on right: 1 3 4 5 68 73 74
function_definition (49)
    on left: 4 5 6, on right: 57
call_definition (50)
    on left: 7 8 9, on right: 58
declaration_list (51)
    on left: 10 11, on right: 4 7 11
expression_list (52)
    on left: 12 13, on right: 13 20 21 69 70 79 80 83 84 85
expression (53)
    on left: 14 15 16 17 18 19 20 21 22 23 24, on right: 12 13 24 25
    26 27 28 29 30 36 37 45 46 47 48 64 65 66 67 68
binary_operation (54)
    on left: 25 26 27 28 29 30, on right: 17
robot_operation (55)
    on left: 31 32 33 34, on right: 18 59
unary_operation (56)
    on left: 35 36 37 38 39 40 41 42 43 44, on right: 19
compare_operation (57)
    on left: 45 46 47 48, on right: 35
statement (58)
    on left: 49 50 51 52 53, on right: 2 3 77 78
statement_s (59)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67,
    on right: 49 50 51 52
switch_state (60)
    on left: 68, on right: 61
appeal_state (61)
    on left: 69 70 71 72, on right: 66 67
for_loop (62)
    on left: 73 74, on right: 60
compound_statement (63)
    on left: 75 76, on right: 54
block_item (64)
    on left: 77 78, on right: 76 78
definition (65)
    on left: 79 80 81 82 83 84 85 86 87 88 89, on right: 55
unary_statement (66)
    on left: 90 91 92 93 94 95 96 97 98 99 100 101,
    on right: 56


state 0

    0 $accept: . program $end

    FINDEXIT  shift, and go to state 1

    program  go to state 2


state 1

    1 program: FINDEXIT . ENDLINE statement_list

    ENDLINE  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: FINDEXIT ENDLINE . statement_list

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22

    statement_list       go to state 23
    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 27
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 4

    0 $accept: program $end .

    $default  accept


state 5

   64 statement_s: VARIABLE . '=' expression
   65            | VARIABLE . error expression
   69 appeal_state: VARIABLE . '[' expression_list ']'
   70             | VARIABLE . '[' expression_list error
   71             | VARIABLE . '[' error
   72             | VARIABLE . error

    error  shift, and go to state 35
    '['    shift, and go to state 36
    '='    shift, and go to state 37


state 6

    4 function_definition: TASK . VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
    5                    | TASK . VARIABLE VARIABLE ENDLINE statement_list RESULT VARIABLE
    6                    | TASK . error

    error     shift, and go to state 38
    VARIABLE  shift, and go to state 39


state 7

    7 call_definition: DO . VARIABLE VARIABLE ',' '[' declaration_list ']'
    8                | DO . VARIABLE VARIABLE
    9                | DO . error

    error     shift, and go to state 40
    VARIABLE  shift, and go to state 41


state 8

   90 unary_statement: LOGITIZE . VARIABLE

    VARIABLE  shift, and go to state 42


state 9

   91 unary_statement: DIGITIZE . VARIABLE

    VARIABLE  shift, and go to state 43


state 10

   92 unary_statement: REDUCE . VARIABLE '[' INTEGER ']'
   94                | REDUCE . VARIABLE '[' INTEGER error ENDLINE
   95                | REDUCE . VARIABLE '[' error ENDLINE
   96                | REDUCE . VARIABLE error ENDLINE
   97                | REDUCE . error ENDLINE

    error     shift, and go to state 44
    VARIABLE  shift, and go to state 45


state 11

   93 unary_statement: EXTENED . VARIABLE '[' INTEGER ']'
   98                | EXTENED . VARIABLE '[' INTEGER error ENDLINE
   99                | EXTENED . VARIABLE '[' error ENDLINE
  100                | EXTENED . VARIABLE error ENDLINE
  101                | EXTENED . error ENDLINE

    error     shift, and go to state 46
    VARIABLE  shift, and go to state 47


state 12

   32 robot_operation: R_LEFT .

    $default  reduce using rule 32 (robot_operation)


state 13

   33 robot_operation: R_RIGHT .

    $default  reduce using rule 33 (robot_operation)


state 14

   31 robot_operation: MOVE .

    $default  reduce using rule 31 (robot_operation)


state 15

   34 robot_operation: GET_E .

    $default  reduce using rule 34 (robot_operation)


state 16

   79 definition: VAR . VARIABLE '[' expression_list ']' '=' INTEGER
   80           | VAR . VARIABLE '[' expression_list ']' '=' BOOL
   81           | VAR . VARIABLE '=' INTEGER
   82           | VAR . VARIABLE '=' BOOL
   83           | VAR . VARIABLE '[' expression_list ']' '=' error ENDLINE
   84           | VAR . VARIABLE '[' expression_list ']' error ENDLINE
   85           | VAR . VARIABLE '[' expression_list error ENDLINE
   86           | VAR . VARIABLE '[' error ENDLINE
   87           | VAR . VARIABLE error ENDLINE
   88           | VAR . VARIABLE '=' error ENDLINE
   89           | VAR . error ENDLINE

    error     shift, and go to state 48
    VARIABLE  shift, and go to state 49


state 17

   53 statement: ENDLINE .

    $default  reduce using rule 53 (statement)


state 18

   73 for_loop: FOR . VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')'
   74         | FOR . VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list error ENDLINE

    VARIABLE  shift, and go to state 50


state 19

   68 switch_state: SWITCH . expression BOOL statement_list '[' BOOL statement_list ']'

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 63
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 20

   62 statement_s: PRINT . VARIABLE
   63            | PRINT . error

    error     shift, and go to state 68
    VARIABLE  shift, and go to state 69


state 21

   50 statement: PLEASE . statement_s ENDLINE
   51          | PLEASE . statement_s THANKS ENDLINE

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    '('       shift, and go to state 22

    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement_s          go to state 70
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 22

   75 compound_statement: '(' . ')'
   76                   | '(' . block_item ')'

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22
    ')'       shift, and go to state 71

    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 72
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    block_item           go to state 73
    definition           go to state 33
    unary_statement      go to state 34


state 23

    1 program: FINDEXIT ENDLINE statement_list .
    3 statement_list: statement_list . statement

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22

    $default  reduce using rule 1 (program)

    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 74
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 24

   57 statement_s: function_definition .

    $default  reduce using rule 57 (statement_s)


state 25

   58 statement_s: call_definition .

    $default  reduce using rule 58 (statement_s)


state 26

   59 statement_s: robot_operation .

    $default  reduce using rule 59 (statement_s)


state 27

    2 statement_list: statement .

    $default  reduce using rule 2 (statement_list)


state 28

   49 statement: statement_s . ENDLINE
   52          | statement_s . THANKS ENDLINE

    ENDLINE  shift, and go to state 75
    THANKS   shift, and go to state 76


state 29

   61 statement_s: switch_state .

    $default  reduce using rule 61 (statement_s)


state 30

   66 statement_s: appeal_state . '=' expression
   67            | appeal_state . error expression

    error  shift, and go to state 77
    '='    shift, and go to state 78


state 31

   60 statement_s: for_loop .

    $default  reduce using rule 60 (statement_s)


state 32

   54 statement_s: compound_statement .

    $default  reduce using rule 54 (statement_s)


state 33

   55 statement_s: definition .

    $default  reduce using rule 55 (statement_s)


state 34

   56 statement_s: unary_statement .

    $default  reduce using rule 56 (statement_s)


state 35

   65 statement_s: VARIABLE error . expression
   72 appeal_state: VARIABLE error .

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    $default  reduce using rule 72 (appeal_state)

    expression         go to state 79
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 36

   69 appeal_state: VARIABLE '[' . expression_list ']'
   70             | VARIABLE '[' . expression_list error
   71             | VARIABLE '[' . error

    error     shift, and go to state 80
    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression_list    go to state 81
    expression         go to state 82
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 37

   64 statement_s: VARIABLE '=' . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 83
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 38

    6 function_definition: TASK error .

    $default  reduce using rule 6 (function_definition)


state 39

    4 function_definition: TASK VARIABLE . VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
    5                    | TASK VARIABLE . VARIABLE ENDLINE statement_list RESULT VARIABLE

    VARIABLE  shift, and go to state 84


state 40

    9 call_definition: DO error .

    $default  reduce using rule 9 (call_definition)


state 41

    7 call_definition: DO VARIABLE . VARIABLE ',' '[' declaration_list ']'
    8                | DO VARIABLE . VARIABLE

    VARIABLE  shift, and go to state 85


state 42

   90 unary_statement: LOGITIZE VARIABLE .

    $default  reduce using rule 90 (unary_statement)


state 43

   91 unary_statement: DIGITIZE VARIABLE .

    $default  reduce using rule 91 (unary_statement)


state 44

   97 unary_statement: REDUCE error . ENDLINE

    ENDLINE  shift, and go to state 86


state 45

   92 unary_statement: REDUCE VARIABLE . '[' INTEGER ']'
   94                | REDUCE VARIABLE . '[' INTEGER error ENDLINE
   95                | REDUCE VARIABLE . '[' error ENDLINE
   96                | REDUCE VARIABLE . error ENDLINE

    error  shift, and go to state 87
    '['    shift, and go to state 88


state 46

  101 unary_statement: EXTENED error . ENDLINE

    ENDLINE  shift, and go to state 89


state 47

   93 unary_statement: EXTENED VARIABLE . '[' INTEGER ']'
   98                | EXTENED VARIABLE . '[' INTEGER error ENDLINE
   99                | EXTENED VARIABLE . '[' error ENDLINE
  100                | EXTENED VARIABLE . error ENDLINE

    error  shift, and go to state 90
    '['    shift, and go to state 91


state 48

   89 definition: VAR error . ENDLINE

    ENDLINE  shift, and go to state 92


state 49

   79 definition: VAR VARIABLE . '[' expression_list ']' '=' INTEGER
   80           | VAR VARIABLE . '[' expression_list ']' '=' BOOL
   81           | VAR VARIABLE . '=' INTEGER
   82           | VAR VARIABLE . '=' BOOL
   83           | VAR VARIABLE . '[' expression_list ']' '=' error ENDLINE
   84           | VAR VARIABLE . '[' expression_list ']' error ENDLINE
   85           | VAR VARIABLE . '[' expression_list error ENDLINE
   86           | VAR VARIABLE . '[' error ENDLINE
   87           | VAR VARIABLE . error ENDLINE
   88           | VAR VARIABLE . '=' error ENDLINE

    error  shift, and go to state 93
    '['    shift, and go to state 94
    '='    shift, and go to state 95


state 50

   73 for_loop: FOR VARIABLE . BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')'
   74         | FOR VARIABLE . BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list error ENDLINE

    BOUNDARY  shift, and go to state 96


state 51

   15 expression: INTEGER .

    $default  reduce using rule 15 (expression)


state 52

   16 expression: VARIABLE .
   20           | VARIABLE . '[' expression_list ']'
   21           | VARIABLE . '[' expression_list error
   22           | VARIABLE . '[' error
   23           | VARIABLE . error

    error  shift, and go to state 97
    '['    shift, and go to state 98

    error    [reduce using rule 16 (expression)]
    BOOL     reduce using rule 16 (expression)
    AND      reduce using rule 16 (expression)
    ENDLINE  reduce using rule 16 (expression)
    THANKS   reduce using rule 16 (expression)
    '+'      reduce using rule 16 (expression)
    '-'      reduce using rule 16 (expression)
    '*'      reduce using rule 16 (expression)
    '/'      reduce using rule 16 (expression)
    ')'      reduce using rule 16 (expression)
    ']'      reduce using rule 16 (expression)
    ','      reduce using rule 16 (expression)


state 53

   14 expression: BOOL .

    $default  reduce using rule 14 (expression)


state 54

   43 unary_operation: GET . VARIABLE
   44                | GET . error

    error     shift, and go to state 99
    VARIABLE  shift, and go to state 100


state 55

   45 compare_operation: MXCOMP . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 101
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 56

   46 compare_operation: ELCOMP . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 102
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 57

   48 compare_operation: MXFALSE . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 103
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 58

   47 compare_operation: MXTRUE . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 104
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 59

   37 unary_operation: NOT . expression
   38                | NOT . error

    error     shift, and go to state 105
    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 106
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 60

   39 unary_operation: SIZE . '(' VARIABLE ')'
   40                | SIZE . '(' VARIABLE error
   41                | SIZE . '(' ')'
   42                | SIZE . error

    error  shift, and go to state 107
    '('    shift, and go to state 108


state 61

   36 unary_operation: '-' . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 109
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 62

   24 expression: '(' . expression ')'

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 110
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 63

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   68 switch_state: SWITCH expression . BOOL statement_list '[' BOOL statement_list ']'

    error  shift, and go to state 111
    BOOL   shift, and go to state 112
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117


state 64

   17 expression: binary_operation .

    $default  reduce using rule 17 (expression)


state 65

   18 expression: robot_operation .

    $default  reduce using rule 18 (expression)


state 66

   19 expression: unary_operation .

    $default  reduce using rule 19 (expression)


state 67

   35 unary_operation: compare_operation .

    $default  reduce using rule 35 (unary_operation)


state 68

   63 statement_s: PRINT error .

    $default  reduce using rule 63 (statement_s)


state 69

   62 statement_s: PRINT VARIABLE .

    $default  reduce using rule 62 (statement_s)


state 70

   50 statement: PLEASE statement_s . ENDLINE
   51          | PLEASE statement_s . THANKS ENDLINE

    ENDLINE  shift, and go to state 118
    THANKS   shift, and go to state 119


state 71

   75 compound_statement: '(' ')' .

    $default  reduce using rule 75 (compound_statement)


state 72

   77 block_item: statement .

    $default  reduce using rule 77 (block_item)


state 73

   76 compound_statement: '(' block_item . ')'
   78 block_item: block_item . statement

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22
    ')'       shift, and go to state 120

    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 121
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 74

    3 statement_list: statement_list statement .

    $default  reduce using rule 3 (statement_list)


state 75

   49 statement: statement_s ENDLINE .

    $default  reduce using rule 49 (statement)


state 76

   52 statement: statement_s THANKS . ENDLINE

    ENDLINE  shift, and go to state 122


state 77

   67 statement_s: appeal_state error . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 123
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 78

   66 statement_s: appeal_state '=' . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 124
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 79

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   65 statement_s: VARIABLE error expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    ENDLINE  reduce using rule 65 (statement_s)
    THANKS   reduce using rule 65 (statement_s)


state 80

   71 appeal_state: VARIABLE '[' error .

    $default  reduce using rule 71 (appeal_state)


state 81

   13 expression_list: expression_list . ',' expression
   69 appeal_state: VARIABLE '[' expression_list . ']'
   70             | VARIABLE '[' expression_list . error

    error  shift, and go to state 125
    ']'    shift, and go to state 126
    ','    shift, and go to state 127


state 82

   12 expression_list: expression .
   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error  [reduce using rule 12 (expression_list)]
    ']'    reduce using rule 12 (expression_list)
    ','    reduce using rule 12 (expression_list)


state 83

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   64 statement_s: VARIABLE '=' expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    ENDLINE  reduce using rule 64 (statement_s)
    THANKS   reduce using rule 64 (statement_s)


state 84

    4 function_definition: TASK VARIABLE VARIABLE . ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE
    5                    | TASK VARIABLE VARIABLE . ENDLINE statement_list RESULT VARIABLE

    ENDLINE  shift, and go to state 128
    ','      shift, and go to state 129


state 85

    7 call_definition: DO VARIABLE VARIABLE . ',' '[' declaration_list ']'
    8                | DO VARIABLE VARIABLE .

    ','  shift, and go to state 130

    $default  reduce using rule 8 (call_definition)


state 86

   97 unary_statement: REDUCE error ENDLINE .

    $default  reduce using rule 97 (unary_statement)


state 87

   96 unary_statement: REDUCE VARIABLE error . ENDLINE

    ENDLINE  shift, and go to state 131


state 88

   92 unary_statement: REDUCE VARIABLE '[' . INTEGER ']'
   94                | REDUCE VARIABLE '[' . INTEGER error ENDLINE
   95                | REDUCE VARIABLE '[' . error ENDLINE

    error    shift, and go to state 132
    INTEGER  shift, and go to state 133


state 89

  101 unary_statement: EXTENED error ENDLINE .

    $default  reduce using rule 101 (unary_statement)


state 90

  100 unary_statement: EXTENED VARIABLE error . ENDLINE

    ENDLINE  shift, and go to state 134


state 91

   93 unary_statement: EXTENED VARIABLE '[' . INTEGER ']'
   98                | EXTENED VARIABLE '[' . INTEGER error ENDLINE
   99                | EXTENED VARIABLE '[' . error ENDLINE

    error    shift, and go to state 135
    INTEGER  shift, and go to state 136


state 92

   89 definition: VAR error ENDLINE .

    $default  reduce using rule 89 (definition)


state 93

   87 definition: VAR VARIABLE error . ENDLINE

    ENDLINE  shift, and go to state 137


state 94

   79 definition: VAR VARIABLE '[' . expression_list ']' '=' INTEGER
   80           | VAR VARIABLE '[' . expression_list ']' '=' BOOL
   83           | VAR VARIABLE '[' . expression_list ']' '=' error ENDLINE
   84           | VAR VARIABLE '[' . expression_list ']' error ENDLINE
   85           | VAR VARIABLE '[' . expression_list error ENDLINE
   86           | VAR VARIABLE '[' . error ENDLINE

    error     shift, and go to state 138
    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression_list    go to state 139
    expression         go to state 82
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 95

   81 definition: VAR VARIABLE '=' . INTEGER
   82           | VAR VARIABLE '=' . BOOL
   88           | VAR VARIABLE '=' . error ENDLINE

    error    shift, and go to state 140
    INTEGER  shift, and go to state 141
    BOOL     shift, and go to state 142


state 96

   73 for_loop: FOR VARIABLE BOUNDARY . VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')'
   74         | FOR VARIABLE BOUNDARY . VARIABLE STEP VARIABLE ENDLINE '(' statement_list error ENDLINE

    VARIABLE  shift, and go to state 143


state 97

   23 expression: VARIABLE error .

    $default  reduce using rule 23 (expression)


state 98

   20 expression: VARIABLE '[' . expression_list ']'
   21           | VARIABLE '[' . expression_list error
   22           | VARIABLE '[' . error

    error     shift, and go to state 144
    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression_list    go to state 145
    expression         go to state 82
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 99

   44 unary_operation: GET error .

    $default  reduce using rule 44 (unary_operation)


state 100

   43 unary_operation: GET VARIABLE .

    $default  reduce using rule 43 (unary_operation)


state 101

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   45 compare_operation: MXCOMP expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error    [reduce using rule 45 (compare_operation)]
    BOOL     reduce using rule 45 (compare_operation)
    AND      [reduce using rule 45 (compare_operation)]
    ENDLINE  reduce using rule 45 (compare_operation)
    THANKS   reduce using rule 45 (compare_operation)
    '+'      [reduce using rule 45 (compare_operation)]
    '-'      [reduce using rule 45 (compare_operation)]
    '*'      [reduce using rule 45 (compare_operation)]
    '/'      [reduce using rule 45 (compare_operation)]
    ')'      reduce using rule 45 (compare_operation)
    ']'      reduce using rule 45 (compare_operation)
    ','      reduce using rule 45 (compare_operation)


state 102

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   46 compare_operation: ELCOMP expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error    [reduce using rule 46 (compare_operation)]
    BOOL     reduce using rule 46 (compare_operation)
    AND      [reduce using rule 46 (compare_operation)]
    ENDLINE  reduce using rule 46 (compare_operation)
    THANKS   reduce using rule 46 (compare_operation)
    '+'      [reduce using rule 46 (compare_operation)]
    '-'      [reduce using rule 46 (compare_operation)]
    '*'      [reduce using rule 46 (compare_operation)]
    '/'      [reduce using rule 46 (compare_operation)]
    ')'      reduce using rule 46 (compare_operation)
    ']'      reduce using rule 46 (compare_operation)
    ','      reduce using rule 46 (compare_operation)


state 103

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   48 compare_operation: MXFALSE expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error    [reduce using rule 48 (compare_operation)]
    BOOL     reduce using rule 48 (compare_operation)
    AND      [reduce using rule 48 (compare_operation)]
    ENDLINE  reduce using rule 48 (compare_operation)
    THANKS   reduce using rule 48 (compare_operation)
    '+'      [reduce using rule 48 (compare_operation)]
    '-'      [reduce using rule 48 (compare_operation)]
    '*'      [reduce using rule 48 (compare_operation)]
    '/'      [reduce using rule 48 (compare_operation)]
    ')'      reduce using rule 48 (compare_operation)
    ']'      reduce using rule 48 (compare_operation)
    ','      reduce using rule 48 (compare_operation)


state 104

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   47 compare_operation: MXTRUE expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error    [reduce using rule 47 (compare_operation)]
    BOOL     reduce using rule 47 (compare_operation)
    AND      [reduce using rule 47 (compare_operation)]
    ENDLINE  reduce using rule 47 (compare_operation)
    THANKS   reduce using rule 47 (compare_operation)
    '+'      [reduce using rule 47 (compare_operation)]
    '-'      [reduce using rule 47 (compare_operation)]
    '*'      [reduce using rule 47 (compare_operation)]
    '/'      [reduce using rule 47 (compare_operation)]
    ')'      reduce using rule 47 (compare_operation)
    ']'      reduce using rule 47 (compare_operation)
    ','      reduce using rule 47 (compare_operation)


state 105

   38 unary_operation: NOT error .

    $default  reduce using rule 38 (unary_operation)


state 106

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   37 unary_operation: NOT expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error    [reduce using rule 37 (unary_operation)]
    BOOL     reduce using rule 37 (unary_operation)
    AND      [reduce using rule 37 (unary_operation)]
    ENDLINE  reduce using rule 37 (unary_operation)
    THANKS   reduce using rule 37 (unary_operation)
    '+'      [reduce using rule 37 (unary_operation)]
    '-'      [reduce using rule 37 (unary_operation)]
    '*'      [reduce using rule 37 (unary_operation)]
    '/'      [reduce using rule 37 (unary_operation)]
    ')'      reduce using rule 37 (unary_operation)
    ']'      reduce using rule 37 (unary_operation)
    ','      reduce using rule 37 (unary_operation)


state 107

   42 unary_operation: SIZE error .

    $default  reduce using rule 42 (unary_operation)


state 108

   39 unary_operation: SIZE '(' . VARIABLE ')'
   40                | SIZE '(' . VARIABLE error
   41                | SIZE '(' . ')'

    VARIABLE  shift, and go to state 146
    ')'       shift, and go to state 147


state 109

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   36 unary_operation: '-' expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113

    error    [reduce using rule 36 (unary_operation)]
    BOOL     reduce using rule 36 (unary_operation)
    AND      [reduce using rule 36 (unary_operation)]
    ENDLINE  reduce using rule 36 (unary_operation)
    THANKS   reduce using rule 36 (unary_operation)
    '+'      reduce using rule 36 (unary_operation)
    '-'      reduce using rule 36 (unary_operation)
    '*'      reduce using rule 36 (unary_operation)
    '/'      reduce using rule 36 (unary_operation)
    ')'      reduce using rule 36 (unary_operation)
    ']'      reduce using rule 36 (unary_operation)
    ','      reduce using rule 36 (unary_operation)


state 110

   24 expression: '(' expression . ')'
   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117
    ')'    shift, and go to state 148


state 111

   30 binary_operation: expression error . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 149
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 112

   68 switch_state: SWITCH expression BOOL . statement_list '[' BOOL statement_list ']'

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22

    statement_list       go to state 150
    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 27
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 113

   29 binary_operation: expression AND . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 151
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 114

   25 binary_operation: expression '+' . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 152
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 115

   27 binary_operation: expression '-' . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 153
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 116

   26 binary_operation: expression '*' . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 154
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 117

   28 binary_operation: expression '/' . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 155
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 118

   50 statement: PLEASE statement_s ENDLINE .

    $default  reduce using rule 50 (statement)


state 119

   51 statement: PLEASE statement_s THANKS . ENDLINE

    ENDLINE  shift, and go to state 156


state 120

   76 compound_statement: '(' block_item ')' .

    $default  reduce using rule 76 (compound_statement)


state 121

   78 block_item: block_item statement .

    $default  reduce using rule 78 (block_item)


state 122

   52 statement: statement_s THANKS ENDLINE .

    $default  reduce using rule 52 (statement)


state 123

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   67 statement_s: appeal_state error expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    ENDLINE  reduce using rule 67 (statement_s)
    THANKS   reduce using rule 67 (statement_s)


state 124

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   66 statement_s: appeal_state '=' expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    ENDLINE  reduce using rule 66 (statement_s)
    THANKS   reduce using rule 66 (statement_s)


state 125

   70 appeal_state: VARIABLE '[' expression_list error .

    $default  reduce using rule 70 (appeal_state)


state 126

   69 appeal_state: VARIABLE '[' expression_list ']' .

    $default  reduce using rule 69 (appeal_state)


state 127

   13 expression_list: expression_list ',' . expression

    INTEGER   shift, and go to state 51
    VARIABLE  shift, and go to state 52
    BOOL      shift, and go to state 53
    GET       shift, and go to state 54
    MXCOMP    shift, and go to state 55
    ELCOMP    shift, and go to state 56
    MXFALSE   shift, and go to state 57
    MXTRUE    shift, and go to state 58
    NOT       shift, and go to state 59
    SIZE      shift, and go to state 60
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    '-'       shift, and go to state 61
    '('       shift, and go to state 62

    expression         go to state 157
    binary_operation   go to state 64
    robot_operation    go to state 65
    unary_operation    go to state 66
    compare_operation  go to state 67


state 128

    5 function_definition: TASK VARIABLE VARIABLE ENDLINE . statement_list RESULT VARIABLE

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22

    statement_list       go to state 158
    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 27
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 129

    4 function_definition: TASK VARIABLE VARIABLE ',' . '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE

    '['  shift, and go to state 159


state 130

    7 call_definition: DO VARIABLE VARIABLE ',' . '[' declaration_list ']'

    '['  shift, and go to state 160


state 131

   96 unary_statement: REDUCE VARIABLE error ENDLINE .

    $default  reduce using rule 96 (unary_statement)


state 132

   95 unary_statement: REDUCE VARIABLE '[' error . ENDLINE

    ENDLINE  shift, and go to state 161


state 133

   92 unary_statement: REDUCE VARIABLE '[' INTEGER . ']'
   94                | REDUCE VARIABLE '[' INTEGER . error ENDLINE

    error  shift, and go to state 162
    ']'    shift, and go to state 163


state 134

  100 unary_statement: EXTENED VARIABLE error ENDLINE .

    $default  reduce using rule 100 (unary_statement)


state 135

   99 unary_statement: EXTENED VARIABLE '[' error . ENDLINE

    ENDLINE  shift, and go to state 164


state 136

   93 unary_statement: EXTENED VARIABLE '[' INTEGER . ']'
   98                | EXTENED VARIABLE '[' INTEGER . error ENDLINE

    error  shift, and go to state 165
    ']'    shift, and go to state 166


state 137

   87 definition: VAR VARIABLE error ENDLINE .

    $default  reduce using rule 87 (definition)


state 138

   86 definition: VAR VARIABLE '[' error . ENDLINE

    ENDLINE  shift, and go to state 167


state 139

   13 expression_list: expression_list . ',' expression
   79 definition: VAR VARIABLE '[' expression_list . ']' '=' INTEGER
   80           | VAR VARIABLE '[' expression_list . ']' '=' BOOL
   83           | VAR VARIABLE '[' expression_list . ']' '=' error ENDLINE
   84           | VAR VARIABLE '[' expression_list . ']' error ENDLINE
   85           | VAR VARIABLE '[' expression_list . error ENDLINE

    error  shift, and go to state 168
    ']'    shift, and go to state 169
    ','    shift, and go to state 127


state 140

   88 definition: VAR VARIABLE '=' error . ENDLINE

    ENDLINE  shift, and go to state 170


state 141

   81 definition: VAR VARIABLE '=' INTEGER .

    $default  reduce using rule 81 (definition)


state 142

   82 definition: VAR VARIABLE '=' BOOL .

    $default  reduce using rule 82 (definition)


state 143

   73 for_loop: FOR VARIABLE BOUNDARY VARIABLE . STEP VARIABLE ENDLINE '(' statement_list ')'
   74         | FOR VARIABLE BOUNDARY VARIABLE . STEP VARIABLE ENDLINE '(' statement_list error ENDLINE

    STEP  shift, and go to state 171


state 144

   22 expression: VARIABLE '[' error .

    $default  reduce using rule 22 (expression)


state 145

   13 expression_list: expression_list . ',' expression
   20 expression: VARIABLE '[' expression_list . ']'
   21           | VARIABLE '[' expression_list . error

    error  shift, and go to state 172
    ']'    shift, and go to state 173
    ','    shift, and go to state 127


state 146

   39 unary_operation: SIZE '(' VARIABLE . ')'
   40                | SIZE '(' VARIABLE . error

    error  shift, and go to state 174
    ')'    shift, and go to state 175


state 147

   41 unary_operation: SIZE '(' ')' .

    $default  reduce using rule 41 (unary_operation)


state 148

   24 expression: '(' expression ')' .

    $default  reduce using rule 24 (expression)


state 149

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression
   30                 | expression error expression .

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error    [reduce using rule 30 (binary_operation)]
    BOOL     reduce using rule 30 (binary_operation)
    AND      [reduce using rule 30 (binary_operation)]
    ENDLINE  reduce using rule 30 (binary_operation)
    THANKS   reduce using rule 30 (binary_operation)
    '+'      [reduce using rule 30 (binary_operation)]
    '-'      [reduce using rule 30 (binary_operation)]
    '*'      [reduce using rule 30 (binary_operation)]
    '/'      [reduce using rule 30 (binary_operation)]
    ')'      reduce using rule 30 (binary_operation)
    ']'      reduce using rule 30 (binary_operation)
    ','      reduce using rule 30 (binary_operation)


state 150

    3 statement_list: statement_list . statement
   68 switch_state: SWITCH expression BOOL statement_list . '[' BOOL statement_list ']'

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22
    '['       shift, and go to state 176

    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 74
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 151

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   29                 | expression AND expression .
   30                 | expression . error expression

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error    [reduce using rule 29 (binary_operation)]
    BOOL     reduce using rule 29 (binary_operation)
    AND      [reduce using rule 29 (binary_operation)]
    ENDLINE  reduce using rule 29 (binary_operation)
    THANKS   reduce using rule 29 (binary_operation)
    '+'      [reduce using rule 29 (binary_operation)]
    '-'      [reduce using rule 29 (binary_operation)]
    '*'      [reduce using rule 29 (binary_operation)]
    '/'      [reduce using rule 29 (binary_operation)]
    ')'      reduce using rule 29 (binary_operation)
    ']'      reduce using rule 29 (binary_operation)
    ','      reduce using rule 29 (binary_operation)


state 152

   25 binary_operation: expression . '+' expression
   25                 | expression '+' expression .
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error    [reduce using rule 25 (binary_operation)]
    BOOL     reduce using rule 25 (binary_operation)
    AND      [reduce using rule 25 (binary_operation)]
    ENDLINE  reduce using rule 25 (binary_operation)
    THANKS   reduce using rule 25 (binary_operation)
    '+'      reduce using rule 25 (binary_operation)
    '-'      reduce using rule 25 (binary_operation)
    ')'      reduce using rule 25 (binary_operation)
    ']'      reduce using rule 25 (binary_operation)
    ','      reduce using rule 25 (binary_operation)


state 153

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   27                 | expression '-' expression .
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error    [reduce using rule 27 (binary_operation)]
    BOOL     reduce using rule 27 (binary_operation)
    AND      [reduce using rule 27 (binary_operation)]
    ENDLINE  reduce using rule 27 (binary_operation)
    THANKS   reduce using rule 27 (binary_operation)
    '+'      reduce using rule 27 (binary_operation)
    '-'      reduce using rule 27 (binary_operation)
    ')'      reduce using rule 27 (binary_operation)
    ']'      reduce using rule 27 (binary_operation)
    ','      reduce using rule 27 (binary_operation)


state 154

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   26                 | expression '*' expression .
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression

    error  shift, and go to state 111
    AND    shift, and go to state 113

    error    [reduce using rule 26 (binary_operation)]
    BOOL     reduce using rule 26 (binary_operation)
    AND      [reduce using rule 26 (binary_operation)]
    ENDLINE  reduce using rule 26 (binary_operation)
    THANKS   reduce using rule 26 (binary_operation)
    '+'      reduce using rule 26 (binary_operation)
    '-'      reduce using rule 26 (binary_operation)
    '*'      reduce using rule 26 (binary_operation)
    '/'      reduce using rule 26 (binary_operation)
    ')'      reduce using rule 26 (binary_operation)
    ']'      reduce using rule 26 (binary_operation)
    ','      reduce using rule 26 (binary_operation)


state 155

   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   28                 | expression '/' expression .
   29                 | expression . AND expression
   30                 | expression . error expression

    error  shift, and go to state 111
    AND    shift, and go to state 113

    error    [reduce using rule 28 (binary_operation)]
    BOOL     reduce using rule 28 (binary_operation)
    AND      [reduce using rule 28 (binary_operation)]
    ENDLINE  reduce using rule 28 (binary_operation)
    THANKS   reduce using rule 28 (binary_operation)
    '+'      reduce using rule 28 (binary_operation)
    '-'      reduce using rule 28 (binary_operation)
    '*'      reduce using rule 28 (binary_operation)
    '/'      reduce using rule 28 (binary_operation)
    ')'      reduce using rule 28 (binary_operation)
    ']'      reduce using rule 28 (binary_operation)
    ','      reduce using rule 28 (binary_operation)


state 156

   51 statement: PLEASE statement_s THANKS ENDLINE .

    $default  reduce using rule 51 (statement)


state 157

   13 expression_list: expression_list ',' expression .
   25 binary_operation: expression . '+' expression
   26                 | expression . '*' expression
   27                 | expression . '-' expression
   28                 | expression . '/' expression
   29                 | expression . AND expression
   30                 | expression . error expression

    error  shift, and go to state 111
    AND    shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115
    '*'    shift, and go to state 116
    '/'    shift, and go to state 117

    error  [reduce using rule 13 (expression_list)]
    ']'    reduce using rule 13 (expression_list)
    ','    reduce using rule 13 (expression_list)


state 158

    3 statement_list: statement_list . statement
    5 function_definition: TASK VARIABLE VARIABLE ENDLINE statement_list . RESULT VARIABLE

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    RESULT    shift, and go to state 177
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22

    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 74
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 159

    4 function_definition: TASK VARIABLE VARIABLE ',' '[' . declaration_list ']' ENDLINE statement_list RESULT VARIABLE

    VARIABLE  shift, and go to state 178

    declaration_list  go to state 179


state 160

    7 call_definition: DO VARIABLE VARIABLE ',' '[' . declaration_list ']'

    VARIABLE  shift, and go to state 178

    declaration_list  go to state 180


state 161

   95 unary_statement: REDUCE VARIABLE '[' error ENDLINE .

    $default  reduce using rule 95 (unary_statement)


state 162

   94 unary_statement: REDUCE VARIABLE '[' INTEGER error . ENDLINE

    ENDLINE  shift, and go to state 181


state 163

   92 unary_statement: REDUCE VARIABLE '[' INTEGER ']' .

    $default  reduce using rule 92 (unary_statement)


state 164

   99 unary_statement: EXTENED VARIABLE '[' error ENDLINE .

    $default  reduce using rule 99 (unary_statement)


state 165

   98 unary_statement: EXTENED VARIABLE '[' INTEGER error . ENDLINE

    ENDLINE  shift, and go to state 182


state 166

   93 unary_statement: EXTENED VARIABLE '[' INTEGER ']' .

    $default  reduce using rule 93 (unary_statement)


state 167

   86 definition: VAR VARIABLE '[' error ENDLINE .

    $default  reduce using rule 86 (definition)


state 168

   85 definition: VAR VARIABLE '[' expression_list error . ENDLINE

    ENDLINE  shift, and go to state 183


state 169

   79 definition: VAR VARIABLE '[' expression_list ']' . '=' INTEGER
   80           | VAR VARIABLE '[' expression_list ']' . '=' BOOL
   83           | VAR VARIABLE '[' expression_list ']' . '=' error ENDLINE
   84           | VAR VARIABLE '[' expression_list ']' . error ENDLINE

    error  shift, and go to state 184
    '='    shift, and go to state 185


state 170

   88 definition: VAR VARIABLE '=' error ENDLINE .

    $default  reduce using rule 88 (definition)


state 171

   73 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP . VARIABLE ENDLINE '(' statement_list ')'
   74         | FOR VARIABLE BOUNDARY VARIABLE STEP . VARIABLE ENDLINE '(' statement_list error ENDLINE

    VARIABLE  shift, and go to state 186


state 172

   21 expression: VARIABLE '[' expression_list error .

    $default  reduce using rule 21 (expression)


state 173

   20 expression: VARIABLE '[' expression_list ']' .

    $default  reduce using rule 20 (expression)


state 174

   40 unary_operation: SIZE '(' VARIABLE error .

    $default  reduce using rule 40 (unary_operation)


state 175

   39 unary_operation: SIZE '(' VARIABLE ')' .

    $default  reduce using rule 39 (unary_operation)


state 176

   68 switch_state: SWITCH expression BOOL statement_list '[' . BOOL statement_list ']'

    BOOL  shift, and go to state 187


state 177

    5 function_definition: TASK VARIABLE VARIABLE ENDLINE statement_list RESULT . VARIABLE

    VARIABLE  shift, and go to state 188


state 178

   10 declaration_list: VARIABLE .

    $default  reduce using rule 10 (declaration_list)


state 179

    4 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list . ']' ENDLINE statement_list RESULT VARIABLE
   11 declaration_list: declaration_list . ',' VARIABLE

    ']'  shift, and go to state 189
    ','  shift, and go to state 190


state 180

    7 call_definition: DO VARIABLE VARIABLE ',' '[' declaration_list . ']'
   11 declaration_list: declaration_list . ',' VARIABLE

    ']'  shift, and go to state 191
    ','  shift, and go to state 190


state 181

   94 unary_statement: REDUCE VARIABLE '[' INTEGER error ENDLINE .

    $default  reduce using rule 94 (unary_statement)


state 182

   98 unary_statement: EXTENED VARIABLE '[' INTEGER error ENDLINE .

    $default  reduce using rule 98 (unary_statement)


state 183

   85 definition: VAR VARIABLE '[' expression_list error ENDLINE .

    $default  reduce using rule 85 (definition)


state 184

   84 definition: VAR VARIABLE '[' expression_list ']' error . ENDLINE

    ENDLINE  shift, and go to state 192


state 185

   79 definition: VAR VARIABLE '[' expression_list ']' '=' . INTEGER
   80           | VAR VARIABLE '[' expression_list ']' '=' . BOOL
   83           | VAR VARIABLE '[' expression_list ']' '=' . error ENDLINE

    error    shift, and go to state 193
    INTEGER  shift, and go to state 194
    BOOL     shift, and go to state 195


state 186

   73 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE . ENDLINE '(' statement_list ')'
   74         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE . ENDLINE '(' statement_list error ENDLINE

    ENDLINE  shift, and go to state 196


state 187

   68 switch_state: SWITCH expression BOOL statement_list '[' BOOL . statement_list ']'

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22

    statement_list       go to state 197
    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 27
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 188

    5 function_definition: TASK VARIABLE VARIABLE ENDLINE statement_list RESULT VARIABLE .

    $default  reduce using rule 5 (function_definition)


state 189

    4 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' . ENDLINE statement_list RESULT VARIABLE

    ENDLINE  shift, and go to state 198


state 190

   11 declaration_list: declaration_list ',' . VARIABLE

    VARIABLE  shift, and go to state 199


state 191

    7 call_definition: DO VARIABLE VARIABLE ',' '[' declaration_list ']' .

    $default  reduce using rule 7 (call_definition)


state 192

   84 definition: VAR VARIABLE '[' expression_list ']' error ENDLINE .

    $default  reduce using rule 84 (definition)


state 193

   83 definition: VAR VARIABLE '[' expression_list ']' '=' error . ENDLINE

    ENDLINE  shift, and go to state 200


state 194

   79 definition: VAR VARIABLE '[' expression_list ']' '=' INTEGER .

    $default  reduce using rule 79 (definition)


state 195

   80 definition: VAR VARIABLE '[' expression_list ']' '=' BOOL .

    $default  reduce using rule 80 (definition)


state 196

   73 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE . '(' statement_list ')'
   74         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE . '(' statement_list error ENDLINE

    '('  shift, and go to state 201


state 197

    3 statement_list: statement_list . statement
   68 switch_state: SWITCH expression BOOL statement_list '[' BOOL statement_list . ']'

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22
    ']'       shift, and go to state 202

    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 74
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 198

    4 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE . statement_list RESULT VARIABLE

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22

    statement_list       go to state 203
    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 27
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 199

   11 declaration_list: declaration_list ',' VARIABLE .

    $default  reduce using rule 11 (declaration_list)


state 200

   83 definition: VAR VARIABLE '[' expression_list ']' '=' error ENDLINE .

    $default  reduce using rule 83 (definition)


state 201

   73 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' . statement_list ')'
   74         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' . statement_list error ENDLINE

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22

    statement_list       go to state 204
    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 27
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 202

   68 switch_state: SWITCH expression BOOL statement_list '[' BOOL statement_list ']' .

    $default  reduce using rule 68 (switch_state)


state 203

    3 statement_list: statement_list . statement
    4 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list . RESULT VARIABLE

    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    RESULT    shift, and go to state 205
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22

    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 74
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 204

    3 statement_list: statement_list . statement
   73 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list . ')'
   74         | FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list . error ENDLINE

    error     shift, and go to state 206
    VARIABLE  shift, and go to state 5
    TASK      shift, and go to state 6
    DO        shift, and go to state 7
    LOGITIZE  shift, and go to state 8
    DIGITIZE  shift, and go to state 9
    REDUCE    shift, and go to state 10
    EXTENED   shift, and go to state 11
    R_LEFT    shift, and go to state 12
    R_RIGHT   shift, and go to state 13
    MOVE      shift, and go to state 14
    GET_E     shift, and go to state 15
    VAR       shift, and go to state 16
    ENDLINE   shift, and go to state 17
    FOR       shift, and go to state 18
    SWITCH    shift, and go to state 19
    PRINT     shift, and go to state 20
    PLEASE    shift, and go to state 21
    '('       shift, and go to state 22
    ')'       shift, and go to state 207

    function_definition  go to state 24
    call_definition      go to state 25
    robot_operation      go to state 26
    statement            go to state 74
    statement_s          go to state 28
    switch_state         go to state 29
    appeal_state         go to state 30
    for_loop             go to state 31
    compound_statement   go to state 32
    definition           go to state 33
    unary_statement      go to state 34


state 205

    4 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT . VARIABLE

    VARIABLE  shift, and go to state 208


state 206

   74 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list error . ENDLINE

    ENDLINE  shift, and go to state 209


state 207

   73 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list ')' .

    $default  reduce using rule 73 (for_loop)


state 208

    4 function_definition: TASK VARIABLE VARIABLE ',' '[' declaration_list ']' ENDLINE statement_list RESULT VARIABLE .

    $default  reduce using rule 4 (function_definition)


state 209

   74 for_loop: FOR VARIABLE BOUNDARY VARIABLE STEP VARIABLE ENDLINE '(' statement_list error ENDLINE .

    $default  reduce using rule 74 (for_loop)
